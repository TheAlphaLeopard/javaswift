Pronto is a fast, simple, and powerful programming language designed for the web. It combines the best features of JavaScript with a cleaner syntax and performance optimizations.

Key features of Pronto include:

- Simple, readable syntax
- JavaScript interoperability
- Fast execution
- Modern programming features
- Built for web development

Syntax

Variables and Constants
Use let for variables and const for constants:

let name = "John"; const PI = 3.14159;

Functions
Define functions using the fn keyword:

fn add(a, b) { return a + b; } // Arrow functions fn multiply(a, b) -> a * b;

Control Flow
Familiar control structures:

// If statement
if (x > 10) { print("x is greater than 10"); } 
else if (x > 5) { print("x is greater than 5"); } 
else { print("x is 5 or less"); } 

// While loop
let i = 0; 
while (i < 5) { print(i); i++; } 

// For loop
for (let i = 0; i < 5; i++) { print(i); }

Comments
// Single line comment 
/* Multi-line comment */

Data Types
Pronto supports the following data types:

Type	Example	Description
Number	42, 3.14	Integer or floating-point numbers
String	"Hello", 'World'	Text, can use single or double quotes
Boolean	true, false	Logical true/false values
Array	[1, 2, 3]	Ordered collection of values
Object	{ name: "John", age: 30 }	Key-value pairs
nil	nil	Represents no value (equivalent to JavaScript's null)
Function	fn add(a, b) { return a + b; }	Reusable code blocks

Operators
Arithmetic Operators
Operator	Description	Example
+	Addition	a + b
-	Subtraction	a - b
*	Multiplication	a * b
/	Division	a / b
%	Modulo	a % b
++	Increment	a++
--	Decrement	a--

Comparison Operators
Operator	Description	Example
==	Equal to	a == b
!=	Not equal to	a != b
>	Greater than	a > b
<	Less than	a < b
>=	Greater than or equal to	a >= b
<=	Less than or equal to	a <= b

Logical Operators
Operator	Description	Example
&&	Logical AND	a && b
||	Logical OR	a || b
!	Logical NOT	!a

Assignment Operators
Operator	Description	Example
=	Assignment	a = b
+=	Addition assignment	a += b
-=	Subtraction assignment	a -= b
*=	Multiplication assignment	a *= b
/=	Division assignment	a /= b

Built-in Functions
Output and Debugging
print("Hello, World!"); // Print to output 
print("Value:", 42); // Multiple arguments

Type Conversion
int("42"); // Convert to integer: 42 
float("3.14"); // Convert to float: 3.14 
string(42); // Convert to string: "42" 
typeof(42); // Get type: "number"

Math Functions
Pronto provides all standard math functions:

abs(-5); // Absolute value: 5 
round(3.7); // Round to nearest integer: 4 
floor(3.7); // Round down: 3 
ceil(3.2); // Round up: 4 
min(2, 5, 1); // Minimum value: 1 
max(2, 5, 1); // Maximum value: 5 
random(); // Random number between 0 and 1 
pow(2, 3); // Power: 8 
sqrt(16); // Square root: 4 
// And many more: sin, cos, tan, log, etc.

Sequences and Collections
len("hello"); // String length: 5 
len([1, 2, 3]); // Array length: 3

DOM Manipulation
// Select elements 
let button = querySelector("#myButton"); 
let items = querySelectorAll(".item"); 

// Create elements 
let div = createElement("div"); 

// Modify elements 
setHTML(div, "Hello"); 
setText(div, "Hello Plain Text"); 
addClass(div, "highlight"); 
removeClass(div, "hidden"); 

// Events 
on(button, "click", fn() { print("Button clicked!"); });

Time Functions
now(); // Current timestamp in milliseconds 

// Async sleep (in async functions) 
fn delayedGreeting() { 
    print("Hello"); 
    sleep(1000).then(fn() { print("World"); }); 
}

Examples
Simple Calculator
fn calculate(a, b, operation) { 
    if (operation == "add") { 
        return a + b; 
    } else if (operation == "subtract") { 
        return a - b; 
    } else if (operation == "multiply") { 
        return a * b; 
    } else if (operation == "divide") { 
        if (b == 0) { 
            return "Error: Division by zero"; 
        } 
        return a / b; 
    } else { 
        return "Error: Unknown operation"; 
    } 
} 
let result = calculate(10, 5, "add"); 
print("10 + 5 =", result); 
result = calculate(10, 5, "subtract"); 
print("10 - 5 =", result);

DOM Manipulation
// Create a button 
let button = createElement("button"); 
setText(button, "Click me!"); 
addClass(button, "btn"); 

// Create a result div 
let result = createElement("div"); 
addClass(result, "result"); 

// Add elements to the body 
let body = querySelector("body"); 
body.appendChild(button); 
body.appendChild(result); 

// Add click event 
let count = 0; 
on(button, "click", fn() { 
    count++; 
    setText(result, "Button clicked " + count + " times"); 
});

Working with Arrays
let numbers = [1, 2, 3, 4, 5]; 

// Calculate sum 
let sum = 0; 
for (let i = 0; i < len(numbers); i++) { 
    sum += numbers[i]; 
} 
print("Sum:", sum); 

// Find maximum 
let max = numbers[0]; 
for (let i = 1; i < len(numbers); i++) { 
    if (numbers[i] > max) { 
        max = numbers[i]; 
    } 
} 
print("Maximum:", max); 

// Filter even numbers 
let evens = []; 
for (let i = 0; i < len(numbers); i++) { 
    if (numbers[i] % 2 == 0) { 
        evens.push(numbers[i]); 
    } 
} 
print("Even numbers:", evens);